
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000956  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b04  00000000  00000000  000009ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000520  00000000  00000000  000014b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 80 04 	call	0x900	; 0x900 <main>
  64:	0c 94 a9 04 	jmp	0x952	; 0x952 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_enInit>:
#include "STD_types.h"
#include "DIO_private.h"
#include "DIO_config.h"
//Port operations
ES_t DIO_enInit(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
    ES_t Local_enuErrorState=ES_OK;
  76:	19 82       	std	Y+1, r1	; 0x01
    DDRA = Conc(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	80 83       	st	Z, r24
    DDRB = Conc(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
  80:	e7 e3       	ldi	r30, 0x37	; 55
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	80 83       	st	Z, r24
    DDRC = Conc(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
  88:	e4 e3       	ldi	r30, 0x34	; 52
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	8f e7       	ldi	r24, 0x7F	; 127
  8e:	80 83       	st	Z, r24
    DDRD = Conc(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
  90:	e1 e3       	ldi	r30, 0x31	; 49
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	80 83       	st	Z, r24
    PORTA = Conc(PA_PIN7_VALUE,PA_PIN6_VALUE,PA_PIN5_VALUE,PA_PIN4_VALUE,PA_PIN3_VALUE,PA_PIN2_VALUE,PA_PIN1_VALUE,PA_PIN0_VALUE);
  98:	eb e3       	ldi	r30, 0x3B	; 59
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	80 83       	st	Z, r24
    PORTB = Conc(PB_PIN7_VALUE,PB_PIN6_VALUE,PB_PIN5_VALUE,PB_PIN4_VALUE,PB_PIN3_VALUE,PB_PIN2_VALUE,PB_PIN1_VALUE,PB_PIN0_VALUE);
  a0:	e8 e3       	ldi	r30, 0x38	; 56
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	80 83       	st	Z, r24
    PORTC = Conc(PC_PIN7_VALUE,PC_PIN6_VALUE,PC_PIN5_VALUE,PC_PIN4_VALUE,PC_PIN3_VALUE,PC_PIN2_VALUE,PC_PIN1_VALUE,PC_PIN0_VALUE);
  a8:	e5 e3       	ldi	r30, 0x35	; 53
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	80 83       	st	Z, r24
    PORTB = Conc(PB_PIN7_VALUE,PB_PIN6_VALUE,PB_PIN5_VALUE,PB_PIN4_VALUE,PB_PIN3_VALUE,PB_PIN2_VALUE,PB_PIN1_VALUE,PB_PIN0_VALUE);
  b0:	e8 e3       	ldi	r30, 0x38	; 56
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	80 83       	st	Z, r24

    return Local_enuErrorState;
  b8:	89 81       	ldd	r24, Y+1	; 0x01
}
  ba:	0f 90       	pop	r0
  bc:	cf 91       	pop	r28
  be:	df 91       	pop	r29
  c0:	08 95       	ret

000000c2 <DIO_enuSetPortDirection>:
ES_t DIO_enuSetPortDirection(u8 Copy_u8PortID,u8 Copy_u8Value)
{
  c2:	df 93       	push	r29
  c4:	cf 93       	push	r28
  c6:	00 d0       	rcall	.+0      	; 0xc8 <DIO_enuSetPortDirection+0x6>
  c8:	00 d0       	rcall	.+0      	; 0xca <DIO_enuSetPortDirection+0x8>
  ca:	0f 92       	push	r0
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	8a 83       	std	Y+2, r24	; 0x02
  d2:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState=ES_OK;
  d4:	19 82       	std	Y+1, r1	; 0x01
    switch(Copy_u8PortID)
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	3d 83       	std	Y+5, r19	; 0x05
  de:	2c 83       	std	Y+4, r18	; 0x04
  e0:	8c 81       	ldd	r24, Y+4	; 0x04
  e2:	9d 81       	ldd	r25, Y+5	; 0x05
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	91 05       	cpc	r25, r1
  e8:	d1 f0       	breq	.+52     	; 0x11e <DIO_enuSetPortDirection+0x5c>
  ea:	2c 81       	ldd	r18, Y+4	; 0x04
  ec:	3d 81       	ldd	r19, Y+5	; 0x05
  ee:	22 30       	cpi	r18, 0x02	; 2
  f0:	31 05       	cpc	r19, r1
  f2:	2c f4       	brge	.+10     	; 0xfe <DIO_enuSetPortDirection+0x3c>
  f4:	8c 81       	ldd	r24, Y+4	; 0x04
  f6:	9d 81       	ldd	r25, Y+5	; 0x05
  f8:	00 97       	sbiw	r24, 0x00	; 0
  fa:	61 f0       	breq	.+24     	; 0x114 <DIO_enuSetPortDirection+0x52>
  fc:	1f c0       	rjmp	.+62     	; 0x13c <DIO_enuSetPortDirection+0x7a>
  fe:	2c 81       	ldd	r18, Y+4	; 0x04
 100:	3d 81       	ldd	r19, Y+5	; 0x05
 102:	22 30       	cpi	r18, 0x02	; 2
 104:	31 05       	cpc	r19, r1
 106:	81 f0       	breq	.+32     	; 0x128 <DIO_enuSetPortDirection+0x66>
 108:	8c 81       	ldd	r24, Y+4	; 0x04
 10a:	9d 81       	ldd	r25, Y+5	; 0x05
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	91 05       	cpc	r25, r1
 110:	81 f0       	breq	.+32     	; 0x132 <DIO_enuSetPortDirection+0x70>
 112:	14 c0       	rjmp	.+40     	; 0x13c <DIO_enuSetPortDirection+0x7a>
    {
    case DIO_PORTA:
        DDRA=Copy_u8Value;
 114:	ea e3       	ldi	r30, 0x3A	; 58
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	8b 81       	ldd	r24, Y+3	; 0x03
 11a:	80 83       	st	Z, r24
 11c:	11 c0       	rjmp	.+34     	; 0x140 <DIO_enuSetPortDirection+0x7e>
        break;
    case DIO_PORTB:
        DDRB=Copy_u8Value;
 11e:	e7 e3       	ldi	r30, 0x37	; 55
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	8b 81       	ldd	r24, Y+3	; 0x03
 124:	80 83       	st	Z, r24
 126:	0c c0       	rjmp	.+24     	; 0x140 <DIO_enuSetPortDirection+0x7e>
        break;
    case DIO_PORTC:
        DDRC=Copy_u8Value;
 128:	e4 e3       	ldi	r30, 0x34	; 52
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	8b 81       	ldd	r24, Y+3	; 0x03
 12e:	80 83       	st	Z, r24
 130:	07 c0       	rjmp	.+14     	; 0x140 <DIO_enuSetPortDirection+0x7e>
        break;
    case DIO_PORTD:
        DDRD=Copy_u8Value;
 132:	e1 e3       	ldi	r30, 0x31	; 49
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	8b 81       	ldd	r24, Y+3	; 0x03
 138:	80 83       	st	Z, r24
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_enuSetPortDirection+0x7e>
        break;
    default:
        Local_enuErrorState=ES_OUT_OF_RANGE;
 13c:	83 e0       	ldi	r24, 0x03	; 3
 13e:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 140:	89 81       	ldd	r24, Y+1	; 0x01
}
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	0f 90       	pop	r0
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	cf 91       	pop	r28
 14e:	df 91       	pop	r29
 150:	08 95       	ret

00000152 <DIO_enuSetPortValue>:
ES_t DIO_enuSetPortValue(u8 Copy_u8PortID,u8 Copy_u8Value)
{
 152:	df 93       	push	r29
 154:	cf 93       	push	r28
 156:	00 d0       	rcall	.+0      	; 0x158 <DIO_enuSetPortValue+0x6>
 158:	00 d0       	rcall	.+0      	; 0x15a <DIO_enuSetPortValue+0x8>
 15a:	0f 92       	push	r0
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
 160:	8a 83       	std	Y+2, r24	; 0x02
 162:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState=ES_OK;
 164:	19 82       	std	Y+1, r1	; 0x01
    switch(Copy_u8PortID)
 166:	8a 81       	ldd	r24, Y+2	; 0x02
 168:	28 2f       	mov	r18, r24
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	3d 83       	std	Y+5, r19	; 0x05
 16e:	2c 83       	std	Y+4, r18	; 0x04
 170:	8c 81       	ldd	r24, Y+4	; 0x04
 172:	9d 81       	ldd	r25, Y+5	; 0x05
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	91 05       	cpc	r25, r1
 178:	d1 f0       	breq	.+52     	; 0x1ae <DIO_enuSetPortValue+0x5c>
 17a:	2c 81       	ldd	r18, Y+4	; 0x04
 17c:	3d 81       	ldd	r19, Y+5	; 0x05
 17e:	22 30       	cpi	r18, 0x02	; 2
 180:	31 05       	cpc	r19, r1
 182:	2c f4       	brge	.+10     	; 0x18e <DIO_enuSetPortValue+0x3c>
 184:	8c 81       	ldd	r24, Y+4	; 0x04
 186:	9d 81       	ldd	r25, Y+5	; 0x05
 188:	00 97       	sbiw	r24, 0x00	; 0
 18a:	61 f0       	breq	.+24     	; 0x1a4 <DIO_enuSetPortValue+0x52>
 18c:	1f c0       	rjmp	.+62     	; 0x1cc <DIO_enuSetPortValue+0x7a>
 18e:	2c 81       	ldd	r18, Y+4	; 0x04
 190:	3d 81       	ldd	r19, Y+5	; 0x05
 192:	22 30       	cpi	r18, 0x02	; 2
 194:	31 05       	cpc	r19, r1
 196:	81 f0       	breq	.+32     	; 0x1b8 <DIO_enuSetPortValue+0x66>
 198:	8c 81       	ldd	r24, Y+4	; 0x04
 19a:	9d 81       	ldd	r25, Y+5	; 0x05
 19c:	83 30       	cpi	r24, 0x03	; 3
 19e:	91 05       	cpc	r25, r1
 1a0:	81 f0       	breq	.+32     	; 0x1c2 <DIO_enuSetPortValue+0x70>
 1a2:	14 c0       	rjmp	.+40     	; 0x1cc <DIO_enuSetPortValue+0x7a>
    {
    case DIO_PORTA:
        PORTA=Copy_u8Value;
 1a4:	eb e3       	ldi	r30, 0x3B	; 59
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	80 83       	st	Z, r24
 1ac:	11 c0       	rjmp	.+34     	; 0x1d0 <DIO_enuSetPortValue+0x7e>
        break;
    case DIO_PORTB:
        PORTB=Copy_u8Value;
 1ae:	e8 e3       	ldi	r30, 0x38	; 56
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	80 83       	st	Z, r24
 1b6:	0c c0       	rjmp	.+24     	; 0x1d0 <DIO_enuSetPortValue+0x7e>
        break;
    case DIO_PORTC:
        PORTC=Copy_u8Value;
 1b8:	e5 e3       	ldi	r30, 0x35	; 53
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	8b 81       	ldd	r24, Y+3	; 0x03
 1be:	80 83       	st	Z, r24
 1c0:	07 c0       	rjmp	.+14     	; 0x1d0 <DIO_enuSetPortValue+0x7e>
        break;
    case DIO_PORTD:
        PORTD=Copy_u8Value;
 1c2:	e2 e3       	ldi	r30, 0x32	; 50
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	8b 81       	ldd	r24, Y+3	; 0x03
 1c8:	80 83       	st	Z, r24
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_enuSetPortValue+0x7e>
        break;
    default:
        Local_enuErrorState=ES_OUT_OF_RANGE;
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 1d0:	89 81       	ldd	r24, Y+1	; 0x01
}
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	cf 91       	pop	r28
 1de:	df 91       	pop	r29
 1e0:	08 95       	ret

000001e2 <DIO_enutogglePort>:
ES_t DIO_enutogglePort(u8 Copy_u8PortID)
{
 1e2:	df 93       	push	r29
 1e4:	cf 93       	push	r28
 1e6:	00 d0       	rcall	.+0      	; 0x1e8 <DIO_enutogglePort+0x6>
 1e8:	00 d0       	rcall	.+0      	; 0x1ea <DIO_enutogglePort+0x8>
 1ea:	cd b7       	in	r28, 0x3d	; 61
 1ec:	de b7       	in	r29, 0x3e	; 62
 1ee:	8a 83       	std	Y+2, r24	; 0x02
    ES_t Local_enuErrorState=ES_OK;
 1f0:	19 82       	std	Y+1, r1	; 0x01
    switch(Copy_u8PortID)
 1f2:	8a 81       	ldd	r24, Y+2	; 0x02
 1f4:	28 2f       	mov	r18, r24
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	3c 83       	std	Y+4, r19	; 0x04
 1fa:	2b 83       	std	Y+3, r18	; 0x03
 1fc:	8b 81       	ldd	r24, Y+3	; 0x03
 1fe:	9c 81       	ldd	r25, Y+4	; 0x04
 200:	81 30       	cpi	r24, 0x01	; 1
 202:	91 05       	cpc	r25, r1
 204:	e9 f0       	breq	.+58     	; 0x240 <DIO_enutogglePort+0x5e>
 206:	2b 81       	ldd	r18, Y+3	; 0x03
 208:	3c 81       	ldd	r19, Y+4	; 0x04
 20a:	22 30       	cpi	r18, 0x02	; 2
 20c:	31 05       	cpc	r19, r1
 20e:	2c f4       	brge	.+10     	; 0x21a <DIO_enutogglePort+0x38>
 210:	8b 81       	ldd	r24, Y+3	; 0x03
 212:	9c 81       	ldd	r25, Y+4	; 0x04
 214:	00 97       	sbiw	r24, 0x00	; 0
 216:	61 f0       	breq	.+24     	; 0x230 <DIO_enutogglePort+0x4e>
 218:	2b c0       	rjmp	.+86     	; 0x270 <DIO_enutogglePort+0x8e>
 21a:	2b 81       	ldd	r18, Y+3	; 0x03
 21c:	3c 81       	ldd	r19, Y+4	; 0x04
 21e:	22 30       	cpi	r18, 0x02	; 2
 220:	31 05       	cpc	r19, r1
 222:	b1 f0       	breq	.+44     	; 0x250 <DIO_enutogglePort+0x6e>
 224:	8b 81       	ldd	r24, Y+3	; 0x03
 226:	9c 81       	ldd	r25, Y+4	; 0x04
 228:	83 30       	cpi	r24, 0x03	; 3
 22a:	91 05       	cpc	r25, r1
 22c:	c9 f0       	breq	.+50     	; 0x260 <DIO_enutogglePort+0x7e>
 22e:	20 c0       	rjmp	.+64     	; 0x270 <DIO_enutogglePort+0x8e>
    {
    case DIO_PORTA:
        PORTA=~PORTA;
 230:	ab e3       	ldi	r26, 0x3B	; 59
 232:	b0 e0       	ldi	r27, 0x00	; 0
 234:	eb e3       	ldi	r30, 0x3B	; 59
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	80 95       	com	r24
 23c:	8c 93       	st	X, r24
 23e:	1a c0       	rjmp	.+52     	; 0x274 <DIO_enutogglePort+0x92>
        break;
    case DIO_PORTB:
        PORTB=~PORTB;
 240:	a8 e3       	ldi	r26, 0x38	; 56
 242:	b0 e0       	ldi	r27, 0x00	; 0
 244:	e8 e3       	ldi	r30, 0x38	; 56
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	80 95       	com	r24
 24c:	8c 93       	st	X, r24
 24e:	12 c0       	rjmp	.+36     	; 0x274 <DIO_enutogglePort+0x92>
        break;
    case DIO_PORTC:
        PORTC=~PORTC;
 250:	a5 e3       	ldi	r26, 0x35	; 53
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e5 e3       	ldi	r30, 0x35	; 53
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	80 95       	com	r24
 25c:	8c 93       	st	X, r24
 25e:	0a c0       	rjmp	.+20     	; 0x274 <DIO_enutogglePort+0x92>
        break;
    case DIO_PORTD:
        PORTD=~PORTD;
 260:	a2 e3       	ldi	r26, 0x32	; 50
 262:	b0 e0       	ldi	r27, 0x00	; 0
 264:	e2 e3       	ldi	r30, 0x32	; 50
 266:	f0 e0       	ldi	r31, 0x00	; 0
 268:	80 81       	ld	r24, Z
 26a:	80 95       	com	r24
 26c:	8c 93       	st	X, r24
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_enutogglePort+0x92>
        break;
    default:
        Local_enuErrorState=ES_OUT_OF_RANGE;
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 274:	89 81       	ldd	r24, Y+1	; 0x01
}
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	0f 90       	pop	r0
 27c:	0f 90       	pop	r0
 27e:	cf 91       	pop	r28
 280:	df 91       	pop	r29
 282:	08 95       	ret

00000284 <DIO_enuGetPortValue>:
ES_t DIO_enuGetPortValue(u8 Copy_u8PortID,u8 * Copy_pu8Value)
{
 284:	df 93       	push	r29
 286:	cf 93       	push	r28
 288:	00 d0       	rcall	.+0      	; 0x28a <DIO_enuGetPortValue+0x6>
 28a:	00 d0       	rcall	.+0      	; 0x28c <DIO_enuGetPortValue+0x8>
 28c:	00 d0       	rcall	.+0      	; 0x28e <DIO_enuGetPortValue+0xa>
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	8a 83       	std	Y+2, r24	; 0x02
 294:	7c 83       	std	Y+4, r23	; 0x04
 296:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState=ES_OK;
 298:	19 82       	std	Y+1, r1	; 0x01
    if(Copy_pu8Value!=NULL)
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	9c 81       	ldd	r25, Y+4	; 0x04
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	09 f4       	brne	.+2      	; 0x2a4 <DIO_enuGetPortValue+0x20>
 2a2:	3e c0       	rjmp	.+124    	; 0x320 <DIO_enuGetPortValue+0x9c>
    {
        switch(Copy_u8PortID)
 2a4:	8a 81       	ldd	r24, Y+2	; 0x02
 2a6:	28 2f       	mov	r18, r24
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	3e 83       	std	Y+6, r19	; 0x06
 2ac:	2d 83       	std	Y+5, r18	; 0x05
 2ae:	8d 81       	ldd	r24, Y+5	; 0x05
 2b0:	9e 81       	ldd	r25, Y+6	; 0x06
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	91 05       	cpc	r25, r1
 2b6:	e1 f0       	breq	.+56     	; 0x2f0 <DIO_enuGetPortValue+0x6c>
 2b8:	2d 81       	ldd	r18, Y+5	; 0x05
 2ba:	3e 81       	ldd	r19, Y+6	; 0x06
 2bc:	22 30       	cpi	r18, 0x02	; 2
 2be:	31 05       	cpc	r19, r1
 2c0:	2c f4       	brge	.+10     	; 0x2cc <DIO_enuGetPortValue+0x48>
 2c2:	8d 81       	ldd	r24, Y+5	; 0x05
 2c4:	9e 81       	ldd	r25, Y+6	; 0x06
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	61 f0       	breq	.+24     	; 0x2e2 <DIO_enuGetPortValue+0x5e>
 2ca:	27 c0       	rjmp	.+78     	; 0x31a <DIO_enuGetPortValue+0x96>
 2cc:	2d 81       	ldd	r18, Y+5	; 0x05
 2ce:	3e 81       	ldd	r19, Y+6	; 0x06
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	a1 f0       	breq	.+40     	; 0x2fe <DIO_enuGetPortValue+0x7a>
 2d6:	8d 81       	ldd	r24, Y+5	; 0x05
 2d8:	9e 81       	ldd	r25, Y+6	; 0x06
 2da:	83 30       	cpi	r24, 0x03	; 3
 2dc:	91 05       	cpc	r25, r1
 2de:	b1 f0       	breq	.+44     	; 0x30c <DIO_enuGetPortValue+0x88>
 2e0:	1c c0       	rjmp	.+56     	; 0x31a <DIO_enuGetPortValue+0x96>
        {
        case DIO_PORTA:
            *Copy_pu8Value=PINA;
 2e2:	e9 e3       	ldi	r30, 0x39	; 57
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	80 81       	ld	r24, Z
 2e8:	eb 81       	ldd	r30, Y+3	; 0x03
 2ea:	fc 81       	ldd	r31, Y+4	; 0x04
 2ec:	80 83       	st	Z, r24
 2ee:	1a c0       	rjmp	.+52     	; 0x324 <DIO_enuGetPortValue+0xa0>
            break;
        case DIO_PORTB:
            *Copy_pu8Value=PINB;
 2f0:	e6 e3       	ldi	r30, 0x36	; 54
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	eb 81       	ldd	r30, Y+3	; 0x03
 2f8:	fc 81       	ldd	r31, Y+4	; 0x04
 2fa:	80 83       	st	Z, r24
 2fc:	13 c0       	rjmp	.+38     	; 0x324 <DIO_enuGetPortValue+0xa0>
            break;
        case DIO_PORTC:
            *Copy_pu8Value=PINC;
 2fe:	e3 e3       	ldi	r30, 0x33	; 51
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	eb 81       	ldd	r30, Y+3	; 0x03
 306:	fc 81       	ldd	r31, Y+4	; 0x04
 308:	80 83       	st	Z, r24
 30a:	0c c0       	rjmp	.+24     	; 0x324 <DIO_enuGetPortValue+0xa0>
            break;
        case DIO_PORTD:
            *Copy_pu8Value=PIND;
 30c:	e0 e3       	ldi	r30, 0x30	; 48
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	eb 81       	ldd	r30, Y+3	; 0x03
 314:	fc 81       	ldd	r31, Y+4	; 0x04
 316:	80 83       	st	Z, r24
 318:	05 c0       	rjmp	.+10     	; 0x324 <DIO_enuGetPortValue+0xa0>
            break;
        default:
            Local_enuErrorState=ES_OUT_OF_RANGE;
 31a:	83 e0       	ldi	r24, 0x03	; 3
 31c:	89 83       	std	Y+1, r24	; 0x01
 31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_enuGetPortValue+0xa0>
        }
    }
    else
    {
        Local_enuErrorState=ES_NULL_POINTER;
 320:	82 e0       	ldi	r24, 0x02	; 2
 322:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 324:	89 81       	ldd	r24, Y+1	; 0x01
}
 326:	26 96       	adiw	r28, 0x06	; 6
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	f8 94       	cli
 32c:	de bf       	out	0x3e, r29	; 62
 32e:	0f be       	out	0x3f, r0	; 63
 330:	cd bf       	out	0x3d, r28	; 61
 332:	cf 91       	pop	r28
 334:	df 91       	pop	r29
 336:	08 95       	ret

00000338 <DIO_enuSetPinDirection>:
//Pin Operations
ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID,u8 Copy_u8BitNumber,u8 Copy_u8Value)
{
 338:	df 93       	push	r29
 33a:	cf 93       	push	r28
 33c:	cd b7       	in	r28, 0x3d	; 61
 33e:	de b7       	in	r29, 0x3e	; 62
 340:	28 97       	sbiw	r28, 0x08	; 8
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	f8 94       	cli
 346:	de bf       	out	0x3e, r29	; 62
 348:	0f be       	out	0x3f, r0	; 63
 34a:	cd bf       	out	0x3d, r28	; 61
 34c:	8a 83       	std	Y+2, r24	; 0x02
 34e:	6b 83       	std	Y+3, r22	; 0x03
 350:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState=ES_OK;
 352:	19 82       	std	Y+1, r1	; 0x01
    // To unuse if and else use that code
    /*
     * DDRA&=~(1<<Copy_u8BitNumber);
     * DDRB|=(1<<Copy_u8BitNumber);
     */
    if(Copy_u8Value==OUTPUT)
 354:	8c 81       	ldd	r24, Y+4	; 0x04
 356:	81 30       	cpi	r24, 0x01	; 1
 358:	09 f0       	breq	.+2      	; 0x35c <DIO_enuSetPinDirection+0x24>
 35a:	72 c0       	rjmp	.+228    	; 0x440 <DIO_enuSetPinDirection+0x108>
    {
        switch(Copy_u8PortID)
 35c:	8a 81       	ldd	r24, Y+2	; 0x02
 35e:	28 2f       	mov	r18, r24
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	38 87       	std	Y+8, r19	; 0x08
 364:	2f 83       	std	Y+7, r18	; 0x07
 366:	8f 81       	ldd	r24, Y+7	; 0x07
 368:	98 85       	ldd	r25, Y+8	; 0x08
 36a:	81 30       	cpi	r24, 0x01	; 1
 36c:	91 05       	cpc	r25, r1
 36e:	49 f1       	breq	.+82     	; 0x3c2 <DIO_enuSetPinDirection+0x8a>
 370:	2f 81       	ldd	r18, Y+7	; 0x07
 372:	38 85       	ldd	r19, Y+8	; 0x08
 374:	22 30       	cpi	r18, 0x02	; 2
 376:	31 05       	cpc	r19, r1
 378:	2c f4       	brge	.+10     	; 0x384 <DIO_enuSetPinDirection+0x4c>
 37a:	8f 81       	ldd	r24, Y+7	; 0x07
 37c:	98 85       	ldd	r25, Y+8	; 0x08
 37e:	00 97       	sbiw	r24, 0x00	; 0
 380:	61 f0       	breq	.+24     	; 0x39a <DIO_enuSetPinDirection+0x62>
 382:	5b c0       	rjmp	.+182    	; 0x43a <DIO_enuSetPinDirection+0x102>
 384:	2f 81       	ldd	r18, Y+7	; 0x07
 386:	38 85       	ldd	r19, Y+8	; 0x08
 388:	22 30       	cpi	r18, 0x02	; 2
 38a:	31 05       	cpc	r19, r1
 38c:	71 f1       	breq	.+92     	; 0x3ea <DIO_enuSetPinDirection+0xb2>
 38e:	8f 81       	ldd	r24, Y+7	; 0x07
 390:	98 85       	ldd	r25, Y+8	; 0x08
 392:	83 30       	cpi	r24, 0x03	; 3
 394:	91 05       	cpc	r25, r1
 396:	e9 f1       	breq	.+122    	; 0x412 <DIO_enuSetPinDirection+0xda>
 398:	50 c0       	rjmp	.+160    	; 0x43a <DIO_enuSetPinDirection+0x102>
        {
        case DIO_PORTA:
            DDRA|=(1<<Copy_u8BitNumber);
 39a:	aa e3       	ldi	r26, 0x3A	; 58
 39c:	b0 e0       	ldi	r27, 0x00	; 0
 39e:	ea e3       	ldi	r30, 0x3A	; 58
 3a0:	f0 e0       	ldi	r31, 0x00	; 0
 3a2:	80 81       	ld	r24, Z
 3a4:	48 2f       	mov	r20, r24
 3a6:	8b 81       	ldd	r24, Y+3	; 0x03
 3a8:	28 2f       	mov	r18, r24
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	02 2e       	mov	r0, r18
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <DIO_enuSetPinDirection+0x80>
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	0a 94       	dec	r0
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <DIO_enuSetPinDirection+0x7c>
 3bc:	84 2b       	or	r24, r20
 3be:	8c 93       	st	X, r24
 3c0:	8b c0       	rjmp	.+278    	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTB:
            DDRB|=(1<<Copy_u8BitNumber);
 3c2:	a7 e3       	ldi	r26, 0x37	; 55
 3c4:	b0 e0       	ldi	r27, 0x00	; 0
 3c6:	e7 e3       	ldi	r30, 0x37	; 55
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	80 81       	ld	r24, Z
 3cc:	48 2f       	mov	r20, r24
 3ce:	8b 81       	ldd	r24, Y+3	; 0x03
 3d0:	28 2f       	mov	r18, r24
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	02 2e       	mov	r0, r18
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_enuSetPinDirection+0xa8>
 3dc:	88 0f       	add	r24, r24
 3de:	99 1f       	adc	r25, r25
 3e0:	0a 94       	dec	r0
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_enuSetPinDirection+0xa4>
 3e4:	84 2b       	or	r24, r20
 3e6:	8c 93       	st	X, r24
 3e8:	77 c0       	rjmp	.+238    	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTC:
            DDRC|=(1<<Copy_u8BitNumber);
 3ea:	a4 e3       	ldi	r26, 0x34	; 52
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	e4 e3       	ldi	r30, 0x34	; 52
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	48 2f       	mov	r20, r24
 3f6:	8b 81       	ldd	r24, Y+3	; 0x03
 3f8:	28 2f       	mov	r18, r24
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	02 2e       	mov	r0, r18
 402:	02 c0       	rjmp	.+4      	; 0x408 <DIO_enuSetPinDirection+0xd0>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	0a 94       	dec	r0
 40a:	e2 f7       	brpl	.-8      	; 0x404 <DIO_enuSetPinDirection+0xcc>
 40c:	84 2b       	or	r24, r20
 40e:	8c 93       	st	X, r24
 410:	63 c0       	rjmp	.+198    	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTD:
            DDRD|=(1<<Copy_u8BitNumber);
 412:	a1 e3       	ldi	r26, 0x31	; 49
 414:	b0 e0       	ldi	r27, 0x00	; 0
 416:	e1 e3       	ldi	r30, 0x31	; 49
 418:	f0 e0       	ldi	r31, 0x00	; 0
 41a:	80 81       	ld	r24, Z
 41c:	48 2f       	mov	r20, r24
 41e:	8b 81       	ldd	r24, Y+3	; 0x03
 420:	28 2f       	mov	r18, r24
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	02 2e       	mov	r0, r18
 42a:	02 c0       	rjmp	.+4      	; 0x430 <DIO_enuSetPinDirection+0xf8>
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	0a 94       	dec	r0
 432:	e2 f7       	brpl	.-8      	; 0x42c <DIO_enuSetPinDirection+0xf4>
 434:	84 2b       	or	r24, r20
 436:	8c 93       	st	X, r24
 438:	4f c0       	rjmp	.+158    	; 0x4d8 <__stack+0x79>
            break;
        default:
            Local_enuErrorState=ES_OUT_OF_RANGE;
 43a:	83 e0       	ldi	r24, 0x03	; 3
 43c:	89 83       	std	Y+1, r24	; 0x01
 43e:	4c c0       	rjmp	.+152    	; 0x4d8 <__stack+0x79>
        }
    }
    else if(Copy_u8Value==OUTPUT)
 440:	8c 81       	ldd	r24, Y+4	; 0x04
 442:	81 30       	cpi	r24, 0x01	; 1
 444:	09 f0       	breq	.+2      	; 0x448 <DIO_enuSetPinDirection+0x110>
 446:	46 c0       	rjmp	.+140    	; 0x4d4 <__stack+0x75>
    {
        switch(Copy_u8PortID)
 448:	8a 81       	ldd	r24, Y+2	; 0x02
 44a:	28 2f       	mov	r18, r24
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	3e 83       	std	Y+6, r19	; 0x06
 450:	2d 83       	std	Y+5, r18	; 0x05
 452:	8d 81       	ldd	r24, Y+5	; 0x05
 454:	9e 81       	ldd	r25, Y+6	; 0x06
 456:	81 30       	cpi	r24, 0x01	; 1
 458:	91 05       	cpc	r25, r1
 45a:	51 f1       	breq	.+84     	; 0x4b0 <__stack+0x51>
 45c:	2d 81       	ldd	r18, Y+5	; 0x05
 45e:	3e 81       	ldd	r19, Y+6	; 0x06
 460:	22 30       	cpi	r18, 0x02	; 2
 462:	31 05       	cpc	r19, r1
 464:	2c f4       	brge	.+10     	; 0x470 <__stack+0x11>
 466:	8d 81       	ldd	r24, Y+5	; 0x05
 468:	9e 81       	ldd	r25, Y+6	; 0x06
 46a:	00 97       	sbiw	r24, 0x00	; 0
 46c:	61 f0       	breq	.+24     	; 0x486 <__stack+0x27>
 46e:	2f c0       	rjmp	.+94     	; 0x4ce <__stack+0x6f>
 470:	2d 81       	ldd	r18, Y+5	; 0x05
 472:	3e 81       	ldd	r19, Y+6	; 0x06
 474:	22 30       	cpi	r18, 0x02	; 2
 476:	31 05       	cpc	r19, r1
 478:	01 f1       	breq	.+64     	; 0x4ba <__stack+0x5b>
 47a:	8d 81       	ldd	r24, Y+5	; 0x05
 47c:	9e 81       	ldd	r25, Y+6	; 0x06
 47e:	83 30       	cpi	r24, 0x03	; 3
 480:	91 05       	cpc	r25, r1
 482:	01 f1       	breq	.+64     	; 0x4c4 <__stack+0x65>
 484:	24 c0       	rjmp	.+72     	; 0x4ce <__stack+0x6f>
        {
        case DIO_PORTA:
            DDRA&=~(1<<Copy_u8BitNumber);
 486:	aa e3       	ldi	r26, 0x3A	; 58
 488:	b0 e0       	ldi	r27, 0x00	; 0
 48a:	ea e3       	ldi	r30, 0x3A	; 58
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	48 2f       	mov	r20, r24
 492:	8b 81       	ldd	r24, Y+3	; 0x03
 494:	28 2f       	mov	r18, r24
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	02 2e       	mov	r0, r18
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__stack+0x45>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	0a 94       	dec	r0
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <__stack+0x41>
 4a8:	80 95       	com	r24
 4aa:	84 23       	and	r24, r20
 4ac:	8c 93       	st	X, r24
 4ae:	14 c0       	rjmp	.+40     	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTB:
            PORTB=Copy_u8Value;
 4b0:	e8 e3       	ldi	r30, 0x38	; 56
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	8c 81       	ldd	r24, Y+4	; 0x04
 4b6:	80 83       	st	Z, r24
 4b8:	0f c0       	rjmp	.+30     	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTC:
            PORTC=Copy_u8Value;
 4ba:	e5 e3       	ldi	r30, 0x35	; 53
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	8c 81       	ldd	r24, Y+4	; 0x04
 4c0:	80 83       	st	Z, r24
 4c2:	0a c0       	rjmp	.+20     	; 0x4d8 <__stack+0x79>
            break;
        case DIO_PORTD:
            PORTD=Copy_u8Value;
 4c4:	e2 e3       	ldi	r30, 0x32	; 50
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	8c 81       	ldd	r24, Y+4	; 0x04
 4ca:	80 83       	st	Z, r24
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <__stack+0x79>
            break;
        default:
            Local_enuErrorState=ES_OUT_OF_RANGE;
 4ce:	83 e0       	ldi	r24, 0x03	; 3
 4d0:	89 83       	std	Y+1, r24	; 0x01
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <__stack+0x79>
        }
    }else{
    	Local_enuErrorState=ES_OUT_OF_RANGE;
 4d4:	83 e0       	ldi	r24, 0x03	; 3
 4d6:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 4d8:	89 81       	ldd	r24, Y+1	; 0x01
}
 4da:	28 96       	adiw	r28, 0x08	; 8
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	f8 94       	cli
 4e0:	de bf       	out	0x3e, r29	; 62
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	cd bf       	out	0x3d, r28	; 61
 4e6:	cf 91       	pop	r28
 4e8:	df 91       	pop	r29
 4ea:	08 95       	ret

000004ec <DIO_enuSetPinValue>:
ES_t DIO_enuSetPinValue(u8 Copy_u8PortID,u8 Copy_u8BitNumber,u8 Copy_u8Value)
{
 4ec:	df 93       	push	r29
 4ee:	cf 93       	push	r28
 4f0:	00 d0       	rcall	.+0      	; 0x4f2 <DIO_enuSetPinValue+0x6>
 4f2:	00 d0       	rcall	.+0      	; 0x4f4 <DIO_enuSetPinValue+0x8>
 4f4:	00 d0       	rcall	.+0      	; 0x4f6 <DIO_enuSetPinValue+0xa>
 4f6:	cd b7       	in	r28, 0x3d	; 61
 4f8:	de b7       	in	r29, 0x3e	; 62
 4fa:	8a 83       	std	Y+2, r24	; 0x02
 4fc:	6b 83       	std	Y+3, r22	; 0x03
 4fe:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState=ES_OK;
 500:	19 82       	std	Y+1, r1	; 0x01
    if(Copy_u8PortID<=PORTD&&Copy_u8BitNumber<=DIO_PIN7&&Copy_u8Value<=HIGH){
 502:	e2 e3       	ldi	r30, 0x32	; 50
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	90 81       	ld	r25, Z
 508:	8a 81       	ldd	r24, Y+2	; 0x02
 50a:	98 17       	cp	r25, r24
 50c:	08 f4       	brcc	.+2      	; 0x510 <DIO_enuSetPinValue+0x24>
 50e:	c6 c0       	rjmp	.+396    	; 0x69c <DIO_enuSetPinValue+0x1b0>
 510:	8b 81       	ldd	r24, Y+3	; 0x03
 512:	88 30       	cpi	r24, 0x08	; 8
 514:	08 f0       	brcs	.+2      	; 0x518 <DIO_enuSetPinValue+0x2c>
 516:	c2 c0       	rjmp	.+388    	; 0x69c <DIO_enuSetPinValue+0x1b0>
 518:	8c 81       	ldd	r24, Y+4	; 0x04
 51a:	82 30       	cpi	r24, 0x02	; 2
 51c:	08 f0       	brcs	.+2      	; 0x520 <DIO_enuSetPinValue+0x34>
 51e:	be c0       	rjmp	.+380    	; 0x69c <DIO_enuSetPinValue+0x1b0>
    	switch(Copy_u8PortID){
 520:	8a 81       	ldd	r24, Y+2	; 0x02
 522:	28 2f       	mov	r18, r24
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	3e 83       	std	Y+6, r19	; 0x06
 528:	2d 83       	std	Y+5, r18	; 0x05
 52a:	8d 81       	ldd	r24, Y+5	; 0x05
 52c:	9e 81       	ldd	r25, Y+6	; 0x06
 52e:	81 30       	cpi	r24, 0x01	; 1
 530:	91 05       	cpc	r25, r1
 532:	09 f4       	brne	.+2      	; 0x536 <DIO_enuSetPinValue+0x4a>
 534:	3e c0       	rjmp	.+124    	; 0x5b2 <DIO_enuSetPinValue+0xc6>
 536:	2d 81       	ldd	r18, Y+5	; 0x05
 538:	3e 81       	ldd	r19, Y+6	; 0x06
 53a:	22 30       	cpi	r18, 0x02	; 2
 53c:	31 05       	cpc	r19, r1
 53e:	2c f4       	brge	.+10     	; 0x54a <DIO_enuSetPinValue+0x5e>
 540:	8d 81       	ldd	r24, Y+5	; 0x05
 542:	9e 81       	ldd	r25, Y+6	; 0x06
 544:	00 97       	sbiw	r24, 0x00	; 0
 546:	71 f0       	breq	.+28     	; 0x564 <DIO_enuSetPinValue+0x78>
 548:	ab c0       	rjmp	.+342    	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
 54a:	2d 81       	ldd	r18, Y+5	; 0x05
 54c:	3e 81       	ldd	r19, Y+6	; 0x06
 54e:	22 30       	cpi	r18, 0x02	; 2
 550:	31 05       	cpc	r19, r1
 552:	09 f4       	brne	.+2      	; 0x556 <DIO_enuSetPinValue+0x6a>
 554:	55 c0       	rjmp	.+170    	; 0x600 <DIO_enuSetPinValue+0x114>
 556:	8d 81       	ldd	r24, Y+5	; 0x05
 558:	9e 81       	ldd	r25, Y+6	; 0x06
 55a:	83 30       	cpi	r24, 0x03	; 3
 55c:	91 05       	cpc	r25, r1
 55e:	09 f4       	brne	.+2      	; 0x562 <DIO_enuSetPinValue+0x76>
 560:	76 c0       	rjmp	.+236    	; 0x64e <DIO_enuSetPinValue+0x162>
 562:	9e c0       	rjmp	.+316    	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
    	case DIO_PORTA:
    		PORTA&=~(1<<Copy_u8BitNumber);
 564:	ab e3       	ldi	r26, 0x3B	; 59
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	eb e3       	ldi	r30, 0x3B	; 59
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	80 81       	ld	r24, Z
 56e:	48 2f       	mov	r20, r24
 570:	8b 81       	ldd	r24, Y+3	; 0x03
 572:	28 2f       	mov	r18, r24
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	02 c0       	rjmp	.+4      	; 0x580 <DIO_enuSetPinValue+0x94>
 57c:	88 0f       	add	r24, r24
 57e:	99 1f       	adc	r25, r25
 580:	2a 95       	dec	r18
 582:	e2 f7       	brpl	.-8      	; 0x57c <DIO_enuSetPinValue+0x90>
 584:	80 95       	com	r24
 586:	84 23       	and	r24, r20
 588:	8c 93       	st	X, r24
    		PORTA|=(1<<Copy_u8BitNumber);
 58a:	ab e3       	ldi	r26, 0x3B	; 59
 58c:	b0 e0       	ldi	r27, 0x00	; 0
 58e:	eb e3       	ldi	r30, 0x3B	; 59
 590:	f0 e0       	ldi	r31, 0x00	; 0
 592:	80 81       	ld	r24, Z
 594:	48 2f       	mov	r20, r24
 596:	8b 81       	ldd	r24, Y+3	; 0x03
 598:	28 2f       	mov	r18, r24
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 2e       	mov	r0, r18
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <DIO_enuSetPinValue+0xbc>
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	0a 94       	dec	r0
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <DIO_enuSetPinValue+0xb8>
 5ac:	84 2b       	or	r24, r20
 5ae:	8c 93       	st	X, r24
 5b0:	77 c0       	rjmp	.+238    	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
    		break;
    	case DIO_PORTB:
    		PORTB&=~(1<<Copy_u8BitNumber);
 5b2:	a8 e3       	ldi	r26, 0x38	; 56
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	e8 e3       	ldi	r30, 0x38	; 56
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	80 81       	ld	r24, Z
 5bc:	48 2f       	mov	r20, r24
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	28 2f       	mov	r18, r24
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <DIO_enuSetPinValue+0xe2>
 5ca:	88 0f       	add	r24, r24
 5cc:	99 1f       	adc	r25, r25
 5ce:	2a 95       	dec	r18
 5d0:	e2 f7       	brpl	.-8      	; 0x5ca <DIO_enuSetPinValue+0xde>
 5d2:	80 95       	com	r24
 5d4:	84 23       	and	r24, r20
 5d6:	8c 93       	st	X, r24
    		PORTB|=(1<<Copy_u8BitNumber);
 5d8:	a8 e3       	ldi	r26, 0x38	; 56
 5da:	b0 e0       	ldi	r27, 0x00	; 0
 5dc:	e8 e3       	ldi	r30, 0x38	; 56
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	80 81       	ld	r24, Z
 5e2:	48 2f       	mov	r20, r24
 5e4:	8b 81       	ldd	r24, Y+3	; 0x03
 5e6:	28 2f       	mov	r18, r24
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	02 2e       	mov	r0, r18
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <DIO_enuSetPinValue+0x10a>
 5f2:	88 0f       	add	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	0a 94       	dec	r0
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <DIO_enuSetPinValue+0x106>
 5fa:	84 2b       	or	r24, r20
 5fc:	8c 93       	st	X, r24
 5fe:	50 c0       	rjmp	.+160    	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
    		break;
    	case DIO_PORTC:
    		PORTC&=~(1<<Copy_u8BitNumber);
 600:	a5 e3       	ldi	r26, 0x35	; 53
 602:	b0 e0       	ldi	r27, 0x00	; 0
 604:	e5 e3       	ldi	r30, 0x35	; 53
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	80 81       	ld	r24, Z
 60a:	48 2f       	mov	r20, r24
 60c:	8b 81       	ldd	r24, Y+3	; 0x03
 60e:	28 2f       	mov	r18, r24
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	81 e0       	ldi	r24, 0x01	; 1
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	02 c0       	rjmp	.+4      	; 0x61c <DIO_enuSetPinValue+0x130>
 618:	88 0f       	add	r24, r24
 61a:	99 1f       	adc	r25, r25
 61c:	2a 95       	dec	r18
 61e:	e2 f7       	brpl	.-8      	; 0x618 <DIO_enuSetPinValue+0x12c>
 620:	80 95       	com	r24
 622:	84 23       	and	r24, r20
 624:	8c 93       	st	X, r24
    		PORTC|=(1<<Copy_u8BitNumber);
 626:	a5 e3       	ldi	r26, 0x35	; 53
 628:	b0 e0       	ldi	r27, 0x00	; 0
 62a:	e5 e3       	ldi	r30, 0x35	; 53
 62c:	f0 e0       	ldi	r31, 0x00	; 0
 62e:	80 81       	ld	r24, Z
 630:	48 2f       	mov	r20, r24
 632:	8b 81       	ldd	r24, Y+3	; 0x03
 634:	28 2f       	mov	r18, r24
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	81 e0       	ldi	r24, 0x01	; 1
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	02 2e       	mov	r0, r18
 63e:	02 c0       	rjmp	.+4      	; 0x644 <DIO_enuSetPinValue+0x158>
 640:	88 0f       	add	r24, r24
 642:	99 1f       	adc	r25, r25
 644:	0a 94       	dec	r0
 646:	e2 f7       	brpl	.-8      	; 0x640 <DIO_enuSetPinValue+0x154>
 648:	84 2b       	or	r24, r20
 64a:	8c 93       	st	X, r24
 64c:	29 c0       	rjmp	.+82     	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
    		break;
    	case DIO_PORTD:
    		PORTD&=~(1<<Copy_u8BitNumber);
 64e:	a2 e3       	ldi	r26, 0x32	; 50
 650:	b0 e0       	ldi	r27, 0x00	; 0
 652:	e2 e3       	ldi	r30, 0x32	; 50
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	80 81       	ld	r24, Z
 658:	48 2f       	mov	r20, r24
 65a:	8b 81       	ldd	r24, Y+3	; 0x03
 65c:	28 2f       	mov	r18, r24
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	81 e0       	ldi	r24, 0x01	; 1
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	02 c0       	rjmp	.+4      	; 0x66a <DIO_enuSetPinValue+0x17e>
 666:	88 0f       	add	r24, r24
 668:	99 1f       	adc	r25, r25
 66a:	2a 95       	dec	r18
 66c:	e2 f7       	brpl	.-8      	; 0x666 <DIO_enuSetPinValue+0x17a>
 66e:	80 95       	com	r24
 670:	84 23       	and	r24, r20
 672:	8c 93       	st	X, r24
    		PORTD|=(1<<Copy_u8BitNumber);
 674:	a2 e3       	ldi	r26, 0x32	; 50
 676:	b0 e0       	ldi	r27, 0x00	; 0
 678:	e2 e3       	ldi	r30, 0x32	; 50
 67a:	f0 e0       	ldi	r31, 0x00	; 0
 67c:	80 81       	ld	r24, Z
 67e:	48 2f       	mov	r20, r24
 680:	8b 81       	ldd	r24, Y+3	; 0x03
 682:	28 2f       	mov	r18, r24
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	02 2e       	mov	r0, r18
 68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_enuSetPinValue+0x1a6>
 68e:	88 0f       	add	r24, r24
 690:	99 1f       	adc	r25, r25
 692:	0a 94       	dec	r0
 694:	e2 f7       	brpl	.-8      	; 0x68e <DIO_enuSetPinValue+0x1a2>
 696:	84 2b       	or	r24, r20
 698:	8c 93       	st	X, r24
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <DIO_enuSetPinValue+0x1b4>
    		break;
    	}
    }else{
    	Local_enuErrorState=ES_OUT_OF_RANGE;
 69c:	83 e0       	ldi	r24, 0x03	; 3
 69e:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 6a0:	89 81       	ldd	r24, Y+1	; 0x01
}
 6a2:	26 96       	adiw	r28, 0x06	; 6
 6a4:	0f b6       	in	r0, 0x3f	; 63
 6a6:	f8 94       	cli
 6a8:	de bf       	out	0x3e, r29	; 62
 6aa:	0f be       	out	0x3f, r0	; 63
 6ac:	cd bf       	out	0x3d, r28	; 61
 6ae:	cf 91       	pop	r28
 6b0:	df 91       	pop	r29
 6b2:	08 95       	ret

000006b4 <DIO_enutogglePinr>:
ES_t DIO_enutogglePinr(u8 Copy_u8PortID,u8 Copy_u8BitNumber)
{
 6b4:	df 93       	push	r29
 6b6:	cf 93       	push	r28
 6b8:	00 d0       	rcall	.+0      	; 0x6ba <DIO_enutogglePinr+0x6>
 6ba:	00 d0       	rcall	.+0      	; 0x6bc <DIO_enutogglePinr+0x8>
 6bc:	0f 92       	push	r0
 6be:	cd b7       	in	r28, 0x3d	; 61
 6c0:	de b7       	in	r29, 0x3e	; 62
 6c2:	8a 83       	std	Y+2, r24	; 0x02
 6c4:	6b 83       	std	Y+3, r22	; 0x03
    ES_t Local_enuErrorState=ES_OK;
 6c6:	19 82       	std	Y+1, r1	; 0x01
    if(Copy_u8PortID<=PORTD&&Copy_u8BitNumber<=DIO_PIN7){
 6c8:	e2 e3       	ldi	r30, 0x32	; 50
 6ca:	f0 e0       	ldi	r31, 0x00	; 0
 6cc:	90 81       	ld	r25, Z
 6ce:	8a 81       	ldd	r24, Y+2	; 0x02
 6d0:	98 17       	cp	r25, r24
 6d2:	08 f4       	brcc	.+2      	; 0x6d6 <DIO_enutogglePinr+0x22>
 6d4:	73 c0       	rjmp	.+230    	; 0x7bc <DIO_enutogglePinr+0x108>
 6d6:	8b 81       	ldd	r24, Y+3	; 0x03
 6d8:	88 30       	cpi	r24, 0x08	; 8
 6da:	08 f0       	brcs	.+2      	; 0x6de <DIO_enutogglePinr+0x2a>
 6dc:	6f c0       	rjmp	.+222    	; 0x7bc <DIO_enutogglePinr+0x108>
    	switch(Copy_u8PortID){
 6de:	8a 81       	ldd	r24, Y+2	; 0x02
 6e0:	28 2f       	mov	r18, r24
 6e2:	30 e0       	ldi	r19, 0x00	; 0
 6e4:	3d 83       	std	Y+5, r19	; 0x05
 6e6:	2c 83       	std	Y+4, r18	; 0x04
 6e8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ea:	9d 81       	ldd	r25, Y+5	; 0x05
 6ec:	81 30       	cpi	r24, 0x01	; 1
 6ee:	91 05       	cpc	r25, r1
 6f0:	49 f1       	breq	.+82     	; 0x744 <DIO_enutogglePinr+0x90>
 6f2:	2c 81       	ldd	r18, Y+4	; 0x04
 6f4:	3d 81       	ldd	r19, Y+5	; 0x05
 6f6:	22 30       	cpi	r18, 0x02	; 2
 6f8:	31 05       	cpc	r19, r1
 6fa:	2c f4       	brge	.+10     	; 0x706 <DIO_enutogglePinr+0x52>
 6fc:	8c 81       	ldd	r24, Y+4	; 0x04
 6fe:	9d 81       	ldd	r25, Y+5	; 0x05
 700:	00 97       	sbiw	r24, 0x00	; 0
 702:	61 f0       	breq	.+24     	; 0x71c <DIO_enutogglePinr+0x68>
 704:	5d c0       	rjmp	.+186    	; 0x7c0 <DIO_enutogglePinr+0x10c>
 706:	2c 81       	ldd	r18, Y+4	; 0x04
 708:	3d 81       	ldd	r19, Y+5	; 0x05
 70a:	22 30       	cpi	r18, 0x02	; 2
 70c:	31 05       	cpc	r19, r1
 70e:	71 f1       	breq	.+92     	; 0x76c <DIO_enutogglePinr+0xb8>
 710:	8c 81       	ldd	r24, Y+4	; 0x04
 712:	9d 81       	ldd	r25, Y+5	; 0x05
 714:	83 30       	cpi	r24, 0x03	; 3
 716:	91 05       	cpc	r25, r1
 718:	e9 f1       	breq	.+122    	; 0x794 <DIO_enutogglePinr+0xe0>
 71a:	52 c0       	rjmp	.+164    	; 0x7c0 <DIO_enutogglePinr+0x10c>
    	case DIO_PORTA:
    		PORTA^=(1<<Copy_u8BitNumber);
 71c:	ab e3       	ldi	r26, 0x3B	; 59
 71e:	b0 e0       	ldi	r27, 0x00	; 0
 720:	eb e3       	ldi	r30, 0x3B	; 59
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	80 81       	ld	r24, Z
 726:	48 2f       	mov	r20, r24
 728:	8b 81       	ldd	r24, Y+3	; 0x03
 72a:	28 2f       	mov	r18, r24
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	81 e0       	ldi	r24, 0x01	; 1
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	02 2e       	mov	r0, r18
 734:	02 c0       	rjmp	.+4      	; 0x73a <DIO_enutogglePinr+0x86>
 736:	88 0f       	add	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	0a 94       	dec	r0
 73c:	e2 f7       	brpl	.-8      	; 0x736 <DIO_enutogglePinr+0x82>
 73e:	84 27       	eor	r24, r20
 740:	8c 93       	st	X, r24
 742:	3e c0       	rjmp	.+124    	; 0x7c0 <DIO_enutogglePinr+0x10c>
    		break;
    	case DIO_PORTB:
    		PORTB^=(1<<Copy_u8BitNumber);
 744:	a8 e3       	ldi	r26, 0x38	; 56
 746:	b0 e0       	ldi	r27, 0x00	; 0
 748:	e8 e3       	ldi	r30, 0x38	; 56
 74a:	f0 e0       	ldi	r31, 0x00	; 0
 74c:	80 81       	ld	r24, Z
 74e:	48 2f       	mov	r20, r24
 750:	8b 81       	ldd	r24, Y+3	; 0x03
 752:	28 2f       	mov	r18, r24
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	81 e0       	ldi	r24, 0x01	; 1
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	02 2e       	mov	r0, r18
 75c:	02 c0       	rjmp	.+4      	; 0x762 <DIO_enutogglePinr+0xae>
 75e:	88 0f       	add	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	0a 94       	dec	r0
 764:	e2 f7       	brpl	.-8      	; 0x75e <DIO_enutogglePinr+0xaa>
 766:	84 27       	eor	r24, r20
 768:	8c 93       	st	X, r24
 76a:	2a c0       	rjmp	.+84     	; 0x7c0 <DIO_enutogglePinr+0x10c>
    		break;
    	case DIO_PORTC:
    		PORTC^=(1<<Copy_u8BitNumber);
 76c:	a5 e3       	ldi	r26, 0x35	; 53
 76e:	b0 e0       	ldi	r27, 0x00	; 0
 770:	e5 e3       	ldi	r30, 0x35	; 53
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	80 81       	ld	r24, Z
 776:	48 2f       	mov	r20, r24
 778:	8b 81       	ldd	r24, Y+3	; 0x03
 77a:	28 2f       	mov	r18, r24
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	02 2e       	mov	r0, r18
 784:	02 c0       	rjmp	.+4      	; 0x78a <DIO_enutogglePinr+0xd6>
 786:	88 0f       	add	r24, r24
 788:	99 1f       	adc	r25, r25
 78a:	0a 94       	dec	r0
 78c:	e2 f7       	brpl	.-8      	; 0x786 <DIO_enutogglePinr+0xd2>
 78e:	84 27       	eor	r24, r20
 790:	8c 93       	st	X, r24
 792:	16 c0       	rjmp	.+44     	; 0x7c0 <DIO_enutogglePinr+0x10c>
    		break;
    	case DIO_PORTD:
    		PORTD^=(1<<Copy_u8BitNumber);
 794:	a2 e3       	ldi	r26, 0x32	; 50
 796:	b0 e0       	ldi	r27, 0x00	; 0
 798:	e2 e3       	ldi	r30, 0x32	; 50
 79a:	f0 e0       	ldi	r31, 0x00	; 0
 79c:	80 81       	ld	r24, Z
 79e:	48 2f       	mov	r20, r24
 7a0:	8b 81       	ldd	r24, Y+3	; 0x03
 7a2:	28 2f       	mov	r18, r24
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	02 2e       	mov	r0, r18
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <DIO_enutogglePinr+0xfe>
 7ae:	88 0f       	add	r24, r24
 7b0:	99 1f       	adc	r25, r25
 7b2:	0a 94       	dec	r0
 7b4:	e2 f7       	brpl	.-8      	; 0x7ae <DIO_enutogglePinr+0xfa>
 7b6:	84 27       	eor	r24, r20
 7b8:	8c 93       	st	X, r24
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <DIO_enutogglePinr+0x10c>
    		break;
    	}
    }else{
    	Local_enuErrorState=ES_OUT_OF_RANGE;
 7bc:	83 e0       	ldi	r24, 0x03	; 3
 7be:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 7c0:	89 81       	ldd	r24, Y+1	; 0x01
}
 7c2:	0f 90       	pop	r0
 7c4:	0f 90       	pop	r0
 7c6:	0f 90       	pop	r0
 7c8:	0f 90       	pop	r0
 7ca:	0f 90       	pop	r0
 7cc:	cf 91       	pop	r28
 7ce:	df 91       	pop	r29
 7d0:	08 95       	ret

000007d2 <DIO_enuGetPinValue>:
ES_t DIO_enuGetPinValue(u8 Copy_u8PortID,u8 Copy_u8BitNumber,u8 * Copy_pu8Value)
{
 7d2:	df 93       	push	r29
 7d4:	cf 93       	push	r28
 7d6:	cd b7       	in	r28, 0x3d	; 61
 7d8:	de b7       	in	r29, 0x3e	; 62
 7da:	27 97       	sbiw	r28, 0x07	; 7
 7dc:	0f b6       	in	r0, 0x3f	; 63
 7de:	f8 94       	cli
 7e0:	de bf       	out	0x3e, r29	; 62
 7e2:	0f be       	out	0x3f, r0	; 63
 7e4:	cd bf       	out	0x3d, r28	; 61
 7e6:	8a 83       	std	Y+2, r24	; 0x02
 7e8:	6b 83       	std	Y+3, r22	; 0x03
 7ea:	5d 83       	std	Y+5, r21	; 0x05
 7ec:	4c 83       	std	Y+4, r20	; 0x04
    ES_t Local_enuErrorState=ES_OK;
 7ee:	19 82       	std	Y+1, r1	; 0x01
    if(Copy_u8PortID<=PORTD&&Copy_u8BitNumber<=DIO_PIN7){
 7f0:	e2 e3       	ldi	r30, 0x32	; 50
 7f2:	f0 e0       	ldi	r31, 0x00	; 0
 7f4:	90 81       	ld	r25, Z
 7f6:	8a 81       	ldd	r24, Y+2	; 0x02
 7f8:	98 17       	cp	r25, r24
 7fa:	08 f4       	brcc	.+2      	; 0x7fe <DIO_enuGetPinValue+0x2c>
 7fc:	75 c0       	rjmp	.+234    	; 0x8e8 <DIO_enuGetPinValue+0x116>
 7fe:	8b 81       	ldd	r24, Y+3	; 0x03
 800:	88 30       	cpi	r24, 0x08	; 8
 802:	08 f0       	brcs	.+2      	; 0x806 <DIO_enuGetPinValue+0x34>
 804:	71 c0       	rjmp	.+226    	; 0x8e8 <DIO_enuGetPinValue+0x116>
    	switch(Copy_u8PortID){
 806:	8a 81       	ldd	r24, Y+2	; 0x02
 808:	28 2f       	mov	r18, r24
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	3f 83       	std	Y+7, r19	; 0x07
 80e:	2e 83       	std	Y+6, r18	; 0x06
 810:	4e 81       	ldd	r20, Y+6	; 0x06
 812:	5f 81       	ldd	r21, Y+7	; 0x07
 814:	41 30       	cpi	r20, 0x01	; 1
 816:	51 05       	cpc	r21, r1
 818:	59 f1       	breq	.+86     	; 0x870 <DIO_enuGetPinValue+0x9e>
 81a:	8e 81       	ldd	r24, Y+6	; 0x06
 81c:	9f 81       	ldd	r25, Y+7	; 0x07
 81e:	82 30       	cpi	r24, 0x02	; 2
 820:	91 05       	cpc	r25, r1
 822:	34 f4       	brge	.+12     	; 0x830 <DIO_enuGetPinValue+0x5e>
 824:	2e 81       	ldd	r18, Y+6	; 0x06
 826:	3f 81       	ldd	r19, Y+7	; 0x07
 828:	21 15       	cp	r18, r1
 82a:	31 05       	cpc	r19, r1
 82c:	69 f0       	breq	.+26     	; 0x848 <DIO_enuGetPinValue+0x76>
 82e:	5e c0       	rjmp	.+188    	; 0x8ec <DIO_enuGetPinValue+0x11a>
 830:	4e 81       	ldd	r20, Y+6	; 0x06
 832:	5f 81       	ldd	r21, Y+7	; 0x07
 834:	42 30       	cpi	r20, 0x02	; 2
 836:	51 05       	cpc	r21, r1
 838:	79 f1       	breq	.+94     	; 0x898 <DIO_enuGetPinValue+0xc6>
 83a:	8e 81       	ldd	r24, Y+6	; 0x06
 83c:	9f 81       	ldd	r25, Y+7	; 0x07
 83e:	83 30       	cpi	r24, 0x03	; 3
 840:	91 05       	cpc	r25, r1
 842:	09 f4       	brne	.+2      	; 0x846 <DIO_enuGetPinValue+0x74>
 844:	3d c0       	rjmp	.+122    	; 0x8c0 <DIO_enuGetPinValue+0xee>
 846:	52 c0       	rjmp	.+164    	; 0x8ec <DIO_enuGetPinValue+0x11a>
    	case DIO_PORTA:
    		*Copy_pu8Value=(PORTA>>Copy_u8BitNumber)&0x01;
 848:	eb e3       	ldi	r30, 0x3B	; 59
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	80 81       	ld	r24, Z
 84e:	28 2f       	mov	r18, r24
 850:	30 e0       	ldi	r19, 0x00	; 0
 852:	8b 81       	ldd	r24, Y+3	; 0x03
 854:	88 2f       	mov	r24, r24
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	a9 01       	movw	r20, r18
 85a:	02 c0       	rjmp	.+4      	; 0x860 <DIO_enuGetPinValue+0x8e>
 85c:	55 95       	asr	r21
 85e:	47 95       	ror	r20
 860:	8a 95       	dec	r24
 862:	e2 f7       	brpl	.-8      	; 0x85c <DIO_enuGetPinValue+0x8a>
 864:	ca 01       	movw	r24, r20
 866:	81 70       	andi	r24, 0x01	; 1
 868:	ec 81       	ldd	r30, Y+4	; 0x04
 86a:	fd 81       	ldd	r31, Y+5	; 0x05
 86c:	80 83       	st	Z, r24
 86e:	3e c0       	rjmp	.+124    	; 0x8ec <DIO_enuGetPinValue+0x11a>
    		break;
    	case DIO_PORTB:
    		*Copy_pu8Value=(PORTB>>Copy_u8BitNumber)&0x01;
 870:	e8 e3       	ldi	r30, 0x38	; 56
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	80 81       	ld	r24, Z
 876:	28 2f       	mov	r18, r24
 878:	30 e0       	ldi	r19, 0x00	; 0
 87a:	8b 81       	ldd	r24, Y+3	; 0x03
 87c:	88 2f       	mov	r24, r24
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	a9 01       	movw	r20, r18
 882:	02 c0       	rjmp	.+4      	; 0x888 <DIO_enuGetPinValue+0xb6>
 884:	55 95       	asr	r21
 886:	47 95       	ror	r20
 888:	8a 95       	dec	r24
 88a:	e2 f7       	brpl	.-8      	; 0x884 <DIO_enuGetPinValue+0xb2>
 88c:	ca 01       	movw	r24, r20
 88e:	81 70       	andi	r24, 0x01	; 1
 890:	ec 81       	ldd	r30, Y+4	; 0x04
 892:	fd 81       	ldd	r31, Y+5	; 0x05
 894:	80 83       	st	Z, r24
 896:	2a c0       	rjmp	.+84     	; 0x8ec <DIO_enuGetPinValue+0x11a>
    		break;
    	case DIO_PORTC:
    		*Copy_pu8Value=(PORTC>>Copy_u8BitNumber)&0x01;
 898:	e5 e3       	ldi	r30, 0x35	; 53
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	80 81       	ld	r24, Z
 89e:	28 2f       	mov	r18, r24
 8a0:	30 e0       	ldi	r19, 0x00	; 0
 8a2:	8b 81       	ldd	r24, Y+3	; 0x03
 8a4:	88 2f       	mov	r24, r24
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	a9 01       	movw	r20, r18
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <DIO_enuGetPinValue+0xde>
 8ac:	55 95       	asr	r21
 8ae:	47 95       	ror	r20
 8b0:	8a 95       	dec	r24
 8b2:	e2 f7       	brpl	.-8      	; 0x8ac <DIO_enuGetPinValue+0xda>
 8b4:	ca 01       	movw	r24, r20
 8b6:	81 70       	andi	r24, 0x01	; 1
 8b8:	ec 81       	ldd	r30, Y+4	; 0x04
 8ba:	fd 81       	ldd	r31, Y+5	; 0x05
 8bc:	80 83       	st	Z, r24
 8be:	16 c0       	rjmp	.+44     	; 0x8ec <DIO_enuGetPinValue+0x11a>
    		break;
    	case DIO_PORTD:
    		*Copy_pu8Value=(PORTD>>Copy_u8BitNumber)&0x01;
 8c0:	e2 e3       	ldi	r30, 0x32	; 50
 8c2:	f0 e0       	ldi	r31, 0x00	; 0
 8c4:	80 81       	ld	r24, Z
 8c6:	28 2f       	mov	r18, r24
 8c8:	30 e0       	ldi	r19, 0x00	; 0
 8ca:	8b 81       	ldd	r24, Y+3	; 0x03
 8cc:	88 2f       	mov	r24, r24
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	a9 01       	movw	r20, r18
 8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <DIO_enuGetPinValue+0x106>
 8d4:	55 95       	asr	r21
 8d6:	47 95       	ror	r20
 8d8:	8a 95       	dec	r24
 8da:	e2 f7       	brpl	.-8      	; 0x8d4 <DIO_enuGetPinValue+0x102>
 8dc:	ca 01       	movw	r24, r20
 8de:	81 70       	andi	r24, 0x01	; 1
 8e0:	ec 81       	ldd	r30, Y+4	; 0x04
 8e2:	fd 81       	ldd	r31, Y+5	; 0x05
 8e4:	80 83       	st	Z, r24
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <DIO_enuGetPinValue+0x11a>
    		break;
    	}
    }else{
    	Local_enuErrorState=ES_OUT_OF_RANGE;
 8e8:	83 e0       	ldi	r24, 0x03	; 3
 8ea:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_enuErrorState;
 8ec:	89 81       	ldd	r24, Y+1	; 0x01
}
 8ee:	27 96       	adiw	r28, 0x07	; 7
 8f0:	0f b6       	in	r0, 0x3f	; 63
 8f2:	f8 94       	cli
 8f4:	de bf       	out	0x3e, r29	; 62
 8f6:	0f be       	out	0x3f, r0	; 63
 8f8:	cd bf       	out	0x3d, r28	; 61
 8fa:	cf 91       	pop	r28
 8fc:	df 91       	pop	r29
 8fe:	08 95       	ret

00000900 <main>:
 *      Author: Aya farid
 */
#include "DIO_interface.h"
#include "DIO_config.h"
#include "STD_types.h"
int main(){
 900:	df 93       	push	r29
 902:	cf 93       	push	r28
 904:	00 d0       	rcall	.+0      	; 0x906 <main+0x6>
 906:	cd b7       	in	r28, 0x3d	; 61
 908:	de b7       	in	r29, 0x3e	; 62
	DIO_enInit();
 90a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enInit>
	DIO_enuSetPortDirection(DIO_PORTA,0x03);
 90e:	80 e0       	ldi	r24, 0x00	; 0
 910:	63 e0       	ldi	r22, 0x03	; 3
 912:	0e 94 61 00 	call	0xc2	; 0xc2 <DIO_enuSetPortDirection>
	DIO_enuSetPortValue(DIO_PORTA,0x00);
 916:	80 e0       	ldi	r24, 0x00	; 0
 918:	60 e0       	ldi	r22, 0x00	; 0
 91a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuSetPortValue>
	DIO_enuSetPortDirection(DIO_PORTA,0x00);
 91e:	80 e0       	ldi	r24, 0x00	; 0
 920:	60 e0       	ldi	r22, 0x00	; 0
 922:	0e 94 61 00 	call	0xc2	; 0xc2 <DIO_enuSetPortDirection>
	DIO_enuSetPortValue(DIO_PORTA,0x03);
 926:	80 e0       	ldi	r24, 0x00	; 0
 928:	63 e0       	ldi	r22, 0x03	; 3
 92a:	0e 94 a9 00 	call	0x152	; 0x152 <DIO_enuSetPortValue>
	while(1){
		u8 * result;
	    DIO_enuGetPinValue(DIO_PORTA,DIO_PIN0,result);
 92e:	29 81       	ldd	r18, Y+1	; 0x01
 930:	3a 81       	ldd	r19, Y+2	; 0x02
 932:	80 e0       	ldi	r24, 0x00	; 0
 934:	60 e0       	ldi	r22, 0x00	; 0
 936:	a9 01       	movw	r20, r18
 938:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <DIO_enuGetPinValue>
		if(*result==LOW){
 93c:	e9 81       	ldd	r30, Y+1	; 0x01
 93e:	fa 81       	ldd	r31, Y+2	; 0x02
 940:	80 81       	ld	r24, Z
 942:	88 23       	and	r24, r24
 944:	a1 f7       	brne	.-24     	; 0x92e <main+0x2e>
			DIO_enuSetPinValue(DIO_PORTA,DIO_PIN0,HIGH);
 946:	80 e0       	ldi	r24, 0x00	; 0
 948:	60 e0       	ldi	r22, 0x00	; 0
 94a:	41 e0       	ldi	r20, 0x01	; 1
 94c:	0e 94 76 02 	call	0x4ec	; 0x4ec <DIO_enuSetPinValue>
 950:	ee cf       	rjmp	.-36     	; 0x92e <main+0x2e>

00000952 <_exit>:
 952:	f8 94       	cli

00000954 <__stop_program>:
 954:	ff cf       	rjmp	.-2      	; 0x954 <__stop_program>
